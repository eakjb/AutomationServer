$(".button-collapse").sideNav();var notificationTimeout=4e3,attemptNotification=function(a){var b=function(){var b=new Notification(a.title,a);setTimeout(function(){b.close()},notificationTimeout)};"Notification"in window?"granted"===Notification.permission?b():"denied"!==Notification.permission&&Notification.requestPermission(function(a){"granted"===a&&b()}):console.log("This browser does not support desktop notification")};angular.module("com.eakjb.homeAutomation",["ngResource"]).factory("APIInterceptor",["$q",function(a){return{response:function(a){return a.data.isWrapped&&a.data.data&&(a.data=a.data.data),a}}}]).config(["$httpProvider",function(a){a.interceptors.push("APIInterceptor")}]).factory("API",["$location","$resource",function(a,b){var c={};return c.HAL=a.search().HAL,c.HAL||(c.HAL="/"),c.notificationListeners=[],c.socket=io(c.HAL),c.socket.on("notification",function(a){angular.forEach(c.notificationListeners,function(b){b(a)}),attemptNotification(a)}),c.Node=b(c.HAL+"api/v1/Nodes/:node_id"),c.nodes=c.Node.query(),c.nodes.$promise.then(function(a){angular.forEach(a,function(a){a.Info=b(a.address,{}),a.Input=b(a.address+"/inputs/:input_id"),a.Output=b(a.address+"/outputs/:output_id",{output_id:"@output_id"},{pushState:{method:"PUT",url:a.address+"/outputs/:output_id/state"}})})}),c}]).controller("NodeListController",["$scope","$q","API",function(a,b,c){a.load=function(){a.nodes=[],a.loaded=!1,a.error=void 0,c.nodes.$promise.then(function(c){a.loaded=!0,a.error=void 0,angular.forEach(c,function(c){if(!c.offline){var d=c.Info.get();d.loaded=!1,d.error=void 0,d.$promise.then(function(){},function(a){d.loaded=!0,d.error=a.data});var e=function(){d.loaded=!1,d.error=void 0;var e=[];d.outputs&&(d.outputs=c.Output.query(),d.outputs.$promise.then(function(a){angular.forEach(a,function(a){a._update=function(b){var e=a.states;"object"==typeof e&&(e=[],angular.forEach(a.states,function(a){e.push(a)})),a.state=e.filter(function(c){return c[b]===a.state[b]})[0],d.loaded=!1,c.Output.pushState({output_id:a.output_id,value:a.state.value})}})}),e.push(d.outputs.$promise)),d.inputs&&(d.inputs=c.Input.query(),d.inputs.$promise.then(function(a){angular.forEach(a,function(a){a._style={width:a.value/(a.max-a.min)*100+"%"}})}),e.push(d.inputs.$promise)),b.all(e).then(function(){d.loaded=!0,d.error=!1},function(b){console.log("Error",b),a.loaded=!0,d.error=b.data})};d.$promise.then(e),a.nodes.push(d)}})},function(b){a.loaded=!0,a.error=b})},a.load(),c.notificationListeners.push(a.load)}]);